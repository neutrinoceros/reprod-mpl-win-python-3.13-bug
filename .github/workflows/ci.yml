name: CI
on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  # auto-cancel any in-progress job *on the same branch*
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          python-version: '3.13'
          manager: pip
          venv-loc: bin
        - os: ubuntu-latest
          python-version: '3.13'
          manager: uv
          venv-loc: bin
        - os: windows-latest
          python-version: '3.12'
          manager: pip
          venv-loc: Scripts
        - os: windows-latest
          python-version: '3.12'
          manager: uv
          venv-loc: Scripts
        - os: windows-latest
          python-version: '3.13'
          manager: pip
          venv-loc: Scripts
        - os: windows-latest
          python-version: '3.13'
          manager: uv
          venv-loc: Scripts

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout Source
      uses: actions/checkout@v4

    - if: ${{ matrix.manager == 'pip' }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{matrix.python-version}}

    - if: ${{ matrix.manager == 'uv' }}
      uses: astral-sh/setup-uv@v3

    - name: Build (pip)
      if: ${{ matrix.manager == 'pip' }}
      shell: bash
      run: |
        python -m venv .venv
        source .venv/${{matrix.venv-loc}}/activate
        pip install -r test_requirements.txt

    - name: Build (uv)
      if: ${{ matrix.manager == 'uv' }}
      run: |
        uv venv --python=${{matrix.python-version}} --python-preference=only-managed
        uv pip install -r test_requirements.txt

    - if: ${{ matrix.manager == 'pip' }}
      shell: bash
      run: |
        source .venv/${{matrix.venv-loc}}/activate
        pip list
    
    - if: ${{ matrix.manager == 'uv' }}
      run: uv pip list

    - name: Test (pip)
      if: ${{ matrix.manager == 'pip' }}
      shell: bash
      run: |
        source .venv/${{matrix.venv-loc}}/activate
        pytest --color=yes -ra

    - name: Test (uv)
      if: ${{ matrix.manager == 'uv' }}
      shell: bash
      run: |
        source .venv/${{matrix.venv-loc}}/activate
        pytest --color=yes -ra
